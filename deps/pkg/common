##### This file should not be executed directly; it is sourced by other scripts.

source "${deps}/host/${host_triplet}"

build_triplet="$(gcc -dumpmachine)"

pkg="$(basename $(dirname $0))"
files="${deps}/files"

set -o nounset
set -o errexit

function win32() {
	case ${host_triplet} in
	*mingw*)
		return 0
		;;
	*)
		return 255
		;;
	esac
}

function die() {
	echo 2>&1 "$@"
	exit 1
}

function fetch() {
	file="$1"
	expected_sha1="$2"
	url="$3"

	mkdir -p "${files}"
	file="${files}/${file}"

	if [ ! -e ${file} ]; then
		echo "Fetching ${url} -> ${file}"
		wget "${url}" -O "${file}"
	fi

	echo "Verifying ${file}"
	actual_sha1=$(sha1sum ${file} | awk '{print $1}')
	if [ "x${actual_sha1}" != "x${expected_sha1}" ]; then
		echo 2>&1 "!!! ${file} from ${url}: SHA1 mismatch !!!"
		echo "Expected: ${expected_sha1}"
		echo "Actual:   ${actual_sha1}"
		exit 1
	fi
}

host_prefix=${host_triplet}-

prefix=${deps}/${host_triplet}
work=${deps}/work-${pkg}-${host_triplet}

export CC=${host_prefix}gcc
export CXX=${host_prefix}g++
export AR=${host_prefix}ar
export RANLIB=${host_prefix}ranlib
export STRIP=${host_prefix}strip
export LD=${host_prefix}ld
win32 && export WINDRES=${host_prefix}windres

# some native MinGW toolchains don't have some host-prefixed tools
which "${AR}" &> /dev/null || export AR=ar
which "${STRIP}" &> /dev/null || export STRIP=strip
which "${RANLIB}" &> /dev/null || export RANLIB=ranlib
which "${LD}" &> /dev/null || export LD=ld
win32 && (which "${WINDRES}" &> /dev/null || export WINDRES=windres)

export PKG_CONFIG_PATH=${prefix}/lib/pkgconfig

export CFLAGS="${CFLAGS} -I${prefix}/include"
export LDFLAGS="${LDFLAGS} -L${prefix}/lib"

export LDFLAGS_NOWL=$(echo "${LDFLAGS}" | sed -e "s/-Wl,//g")

echo "Configuration for ${host_triplet}:"
echo "CFLAGS:           ${CFLAGS}"
echo "CXXFLAGS:         ${CXXFLAGS}"
echo "LDFLAGS raw:      ${LDFLAGS_NOWL}"
echo "LDFLAGS:          ${LDFLAGS}"
echo "PKG_CONFIG_PATH:  ${PKG_CONFIG_PATH}"
echo
echo "CC:               ${CC}"
echo "CXX:              ${CXX}"
echo "AR:               ${AR}"
echo "RANLIB:           ${RANLIB}"
echo "STRIP:            ${STRIP}"
echo "LD:               ${LD}"
win32 && echo "WINDRES:          ${WINDRES}"
echo
